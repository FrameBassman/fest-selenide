/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.4/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id 'application'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.easytesting:fest-swing:1.2.1'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'com.codeborne:selenide:5.15.1'
}

application {
    // Define the main class for the application
    mainClassName = 'tech.romashov.App'
}

test {
    dependsOn cleanTest
    // don't stop if tests fail
    ignoreFailures = true

    // minimize logging
    testLogging.maxGranularity = 0

    // show stdout from tests
    onOutput { dest, event -> print event.message }

    // show test results
    def results = []
    afterTest { desc, result ->
        println "${desc.className.split("\\.")[-1]}: " +
                "${desc.name}: ${result.resultType}"
    }
    afterSuite { desc, result ->
        if (desc.className) { results << result }
    }

    // show summary
    doLast {
        println "Tests: ${results.sum { it.testCount }}" +
                ", Failures: ${results.sum { it.failedTestCount }}" +
                ", Errors: ${results.sum { it.exceptions.size() }}" +
                ", Skipped: ${results.sum { it.skippedTestCount }}"
    }
//    useJUnit()
}
